{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/movieFromServer.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onAdd","useState","setMovie","inputValue","setInputValue","setMovieEvent","endPoint","fetch","then","response","json","res","newMovie","Title","Plot","Poster","imdbID","createNewMovie","isSuccess","Object","values","includes","undefined","htmlFor","type","id","placeholder","value","keys","length","onChange","e","preventDefault","target","onKeyDown","onClick","disabled","App","state","data","addMovie","some","m","setState","concat","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7e50e32.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport className from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/movieFromServer';\n\nexport const FindMovie = ({ onAdd }) => {\n  const [movie, setMovie] = useState({});\n  const [inputValue, setInputValue] = useState('');\n\n  const createNewMovie = () => {\n    const { Title, Plot, Poster, imdbID } = movie;\n\n    return {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    };\n  };\n\n  const setInputValueEvent = (e) => {\n    e.preventDefault();\n    setInputValue(e.target.value);\n  };\n\n  const setMovieEvent = () => {\n    getMovie(inputValue)\n      .then((res) => {\n        setMovie(res);\n      });\n    setInputValue('');\n  };\n\n  const pressEnterEvent = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      setMovieEvent();\n    }\n  };\n\n  const newMovie = createNewMovie();\n  const isSuccess = !Object.values(newMovie).includes(undefined);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={inputValue}\n              className={className(\n                'input',\n                { 'is-danger': !isSuccess && Object.keys(movie).length > 0 },\n                { 'is-primary': isSuccess },\n              )}\n              onChange={setInputValueEvent}\n              onKeyDown={pressEnterEvent}\n            />\n          </div>\n\n          {!isSuccess && Object.keys(movie).length > 0 && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={(e) => {\n                e.preventDefault();\n                setMovieEvent();\n              }}\n              disabled={!inputValue.length}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={(e) => {\n                e.preventDefault();\n                onAdd(newMovie);\n                setMovie({});\n              }}\n              disabled={!isSuccess}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {isSuccess && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=4becbea0&t=';\n\nexport function getMovie(endPoint) {\n  return fetch(`${BASE_URL}${endPoint}`)\n    .then(response => response.json());\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    const { movies } = this.state;\n\n    if (movies.some(m => m.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    const newMovie = movie;\n\n    this.setState(state => ({ movies: state.movies.concat(newMovie) }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}